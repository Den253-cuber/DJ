

services:
  server:
    container_name: nginx_dj
    image: nginx:alpine
    working_dir: /application
    ports:
      - "127.0.0.1:10000:80"
    volumes:
      - ./:/var/www/dj
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - dj

  app:
    container_name: app_dj
    build:
      context: ./deploy/dockerfiles
      dockerfile: local-alpine.Dockerfile
      args:
        WWWUSER: '${WWWUSER:-1000}'
        WWWGROUP: '${WWWGROUP:-1000}'
    working_dir: /var/www/dj
    volumes:
      - ./:/var/www/dj
      - ./deploy/php/uploads.ini:/usr/local/etc/php/php.ini
    networks:
      - dj

  pgsql:
    container_name: psql_dj
    image: postgres:16.0-alpine
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - dj-pgsql-data:/var/lib/postgresql/data
    ports:
      - '127.0.0.1:10001:5432'
    networks:
      - dj

  cache:
    container_name: redis_dj
    image: redis:7.2.3
    volumes:
      - dj-cache-data:/data
    ports:
      - "127.0.0.1:10002:6379"
    networks:
      - dj

volumes:
  dj-pgsql-data:
    driver: local
  dj-cache-data:
    driver: local

networks:
  dj:
    driver: bridge